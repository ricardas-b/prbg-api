openapi: 3.0.2
info:
  title: 'Quote API'
  version: '1.0.0'
paths:
  /api/v1/authors/:
    get:
      operationId: listAuthors
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Author'
          description: ''
      tags:
      - api
  /api/v1/books/:
    get:
      operationId: listBooks
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Book'
          description: ''
      tags:
      - api
  /api/v1/quotes/:
    get:
      operationId: listQuotes
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Quote'
          description: ''
      tags:
      - api
  /api/v1/tags/:
    get:
      operationId: listTags
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tag'
          description: ''
      tags:
      - api
  /api/v1/authors/{id}/:
    get:
      operationId: retrieveAuthor
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
      tags:
      - api
  /api/v1/books/{id}/:
    get:
      operationId: retrieveBook
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
      tags:
      - api
  /api/v1/quotes/{id}/:
    get:
      operationId: retrieveQuote
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote'
          description: ''
      tags:
      - api
  /api/v1/tags/{id}/:
    get:
      operationId: retrieveTag
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
      tags:
      - api
  /api/v1/quotes/random/:
    get:
      operationId: listQuotes
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Quote'
          description: ''
      tags:
      - api
components:
  schemas:
    Author:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          nullable: true
          maxLength: 64
        middle_name:
          type: string
          nullable: true
          maxLength: 64
        last_name:
          type: string
          maxLength: 64
        date_of_birth:
          type: string
          format: date
        nationality:
          type: string
          maxLength: 64
      required:
      - last_name
      - date_of_birth
      - nationality
    Book:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        author:
          type: string
          readOnly: true
        title:
          type: string
          maxLength: 512
        subtitle:
          type: string
          nullable: true
          maxLength: 1024
        year:
          type: integer
        publisher:
          type: string
          maxLength: 256
        isbn:
          type: string
          maxLength: 13
      required:
      - title
      - year
      - publisher
      - isbn
    Quote:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
        author:
          type: string
          readOnly: true
        book:
          type: string
          readOnly: true
        date:
          type: string
          format: date
          nullable: true
        language:
          type: string
          maxLength: 64
        length_in_words:
          type: integer
          nullable: true
        editors_comment:
          type: string
          nullable: true
        rating:
          type: integer
          nullable: true
        tags:
          type: string
      required:
      - text
      - language
      - tags
    Tag:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 64
      required:
      - name
